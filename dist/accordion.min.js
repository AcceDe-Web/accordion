/**
 * @accedeweb/tablist - WAI-ARIA accordion plugin based on AcceDe Web accessibility guidelines
 * @version v0.0.0
 * @link http://a11y.switch.paris/
 * @license ISC
 **/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Accordion=t()}(this,function(){"use strict";const e=["hide","show"],t=["H1","H2","H3","H4","H5","H6"];return class{constructor(e){if(!e||!e.nodeName)throw new Error("No DOM node provided. Abort.");this.el=e,this.multiselectable="true"===this.el.getAttribute("data-multiselectable"),this.accordion={},this.callbacks={},this._handleDisplay=this._handleDisplay.bind(this),this._handleFocus=this._handleFocus.bind(this),this._handleTab=this._handleTab.bind(this),this._handlePanelFocus=this._handlePanelFocus.bind(this),this._handlePanel=this._handlePanel.bind(this)}_firstActiveTab(){let e;for(let t=0;t<this.accordion.headers.length;t++)if(!this.accordion.headers[t].disabled){e=t;break}return e}_handleDisplay(e){e.preventDefault();const t=e.currentTarget;t.disabled||(t!==document.activeElement&&t.focus(),this._toggleDisplay(this.accordion.headers.indexOf(t)))}_handleFocus(e){const t=e.currentTarget;t.disabled||(this.accordion.currentIndex=this.accordion.headers.indexOf(t))}_handlePanel(e){switch(void 0===this.accordion.currentIndex&&this._handlePanelFocus(e),e.keyCode){case 33:e.ctrlKey&&(e.preventDefault(),this._switchTab(this.accordion.currentIndex-1));break;case 34:e.ctrlKey&&(e.preventDefault(),this._switchTab(this.accordion.currentIndex+1));break;case 38:e.ctrlKey&&(e.preventDefault(),this._switchTab(this.accordion.currentIndex))}}_handlePanelFocus(e){if(e.target.doubleFocus)return e.preventDefault(),void delete e.target.doubleFocus;const t=e.currentTarget;this.accordion.currentIndex=this.accordion.panels.indexOf(t),["radio","checkbox"].indexOf(e.target.type)>=0&&(e.target.doubleFocus=!0)}_handleTab(e){switch(void 0===this.accordion.currentIndex&&this._handleFocus(e),e.keyCode){case 32:case 13:this._handleDisplay(e);break;case 35:e.preventDefault(),this._switchTab(this.accordion.headers.length-1);break;case 36:e.preventDefault(),this._switchTab(this._firstActiveTab());break;case 37:case 38:e.preventDefault(),this._switchTab(this.accordion.currentIndex-1);break;case 39:case 40:e.preventDefault(),this._switchTab(this.accordion.currentIndex+1)}}_noop(){}_switchTab(e){if(this.accordion.headers[e]&&this.accordion.headers[e].disabled){const t=e>this.accordion.currentIndex?e+1:e-1;this._switchTab(t)}else this.accordion.currentIndex=e,this.accordion.currentIndex<this._firstActiveTab()?this.accordion.currentIndex=this.accordion.headersLength-1:this.accordion.currentIndex>=this.accordion.headersLength&&(this.accordion.currentIndex=this._firstActiveTab()),this.accordion.headers[this.accordion.currentIndex].focus()}_toggleDisplay(e,t){const i=this.accordion.headers[e],s=this.accordion.panels[e],a="true"===i.getAttribute("aria-expanded");void 0===t&&(t="false"===i.getAttribute("aria-expanded")),t&&a||!t&&!a||(t&&!this.multiselectable&&void 0!==this.accordion.openedIndexes[0]&&this._toggleDisplay(this.accordion.openedIndexes[0],!1),i.setAttribute("aria-expanded",t),s.setAttribute("aria-hidden",!t),t?(this.accordion.openedIndexes.push(e),this._trigger("show",[i,s])):(this.accordion.openedIndexes.splice(this.accordion.openedIndexes.indexOf(e),1),this._trigger("hide",[i,s])))}_trigger(e,t){this.callbacks[e]&&this.callbacks[e].forEach(e=>{e.apply(this,t)})}closeAll(){this.accordion.headers.forEach((e,t)=>{this._toggleDisplay(t,!1)})}mount(){this.accordion.headers=[],this.accordion.panels=[],this.accordion.openedIndexes=[],Array.prototype.slice.call(this.el.children).forEach((e,i)=>{if(!(t.indexOf(e.nodeName)>-1||"heading"===e.getAttribute("role")||e.hasAttribute("aria-level")))return;if(!(e=e.querySelector('button[aria-controls], [role="button"][aria-controls]')))return;const s=document.getElementById(e.getAttribute("aria-controls"));let a=!1;if(!s)throw new Error(`Could not find associated panel for header ${e.id}. Use [aria-controls="panelId"] on the [role="header"] element to link them together`);this.accordion.headers.push(e),this.accordion.panels.push(s),e.disabled=e.hasAttribute("disabled")||"true"===e.getAttribute("aria-disabled"),"true"!==e.getAttribute("data-expanded")||e.disabled||(this.multiselectable||!this.multiselectable&&!this.accordion.openedIndexes.length)&&(this._toggleDisplay(i,!0),a=!0),e.removeAttribute("data-expanded"),e.setAttribute("tabindex",0),e.setAttribute("aria-expanded",a),s.setAttribute("aria-hidden",!a),e.addEventListener("click",this._handleDisplay),e.addEventListener("focus",this._handleFocus),e.addEventListener("keydown",this._handleTab),s.addEventListener("focus",this._handlePanelFocus),s.addEventListener("keydown",this._handlePanel)}),this.accordion.headersLength=this.accordion.headers.length,this.accordion.panelsLength=this.accordion.panels.length}off(e,t){if(!this.callbacks[e])return;const i=this.callbacks[e].indexOf(t);i<0||this.callbacks[e].splice(i,1)}on(t,i){e.indexOf(t)<0||(this.callbacks[t]||(this.callbacks[t]=[]),this.callbacks[t].push(i))}get openedTab(){return[this.accordion.headers[this.accordion.openedIndexes],this.accordion.panels[this.accordion.openedIndexes]]}unmount(){this.accordion.headers.forEach((e,t)=>{const i=this.accordion.panels[t];e.removeEventListener("click",this._handleDisplay),e.removeEventListener("focus",this._handleFocus),e.removeEventListener("keydown",this._handleTab),e.removeAttribute("tabindex"),e.removeAttribute("aria-expanded"),i.removeEventListener("focus",this._handlePanelFocus),i.removeEventListener("keydown",this._handlePanel),i.setAttribute("aria-hidden","false")}),this.tablist={}}}});
